<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<bean class="com.winterframework.modules.utils.SpringContextHolder" />
	<context:component-scan base-package="com.winterframework.modules.spring.exetend" />
	<context:component-scan base-package="com.winterframework.modules.spring.console" />
	
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.winterframework.efamily"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 转换message为json类型输出 -->
		<!--<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="com.winterframework.efamily.base.http.HttpMessageConverter">
			 True only for the blog article - a production system would set this 
					to false to reduce the number of bytes sent across the wire: 
				<property name="prettyPrint" value="true" />
			</bean>
		</mvc:message-converters>
		
	</mvc:annotation-driven>-->

		<mvc:annotation-driven>
		    <mvc:message-converters>
		        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		            <property name="supportedMediaTypes">
		                <list>
		                    <value>text/html;charset=UTF-8</value>
		                </list>
		            </property>
		        </bean>
		    </mvc:message-converters>
		</mvc:annotation-driven>


	<!-- 拦截器 -->
	<!-- <mvc:interceptors>
		多个拦截器,顺序执行
		<mvc:interceptor>
			<mvc:mapping path="/*" />如果不配置或/*,将拦截所有的Controller
			<bean class="com.winterframework.firefrog.common.interceptor.CommonInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.winterframework.efamily.interceptor.RequestInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	
	<mvc:interceptors>
			<bean id="reqestHandlerInterceptor" class="com.winterframework.efamily.institution.web.interceptor.ReqestHandlerInterceptor"></bean>
	</mvc:interceptors>
	<mvc:interceptors>
			<bean id="authInterceptor" class="com.winterframework.efamily.institution.web.interceptor.AuthInterceptor"></bean>
	</mvc:interceptors>
	
	<bean id="propertyConfigurer"
		class="com.winterframework.modules.spring.exetend.ExtendedPropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:/application.properties</value>
				<value>classpath:/db.properties</value>
				<value>classpath:/redis.properties</value>
			</list>
		</property>
	</bean>
	<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/static" />

	<!--  trad exception -->	
	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" />

	<!-- Unfortunately we have to repeat an instance of this class here because 
		the mvc:message-converters element above does not support <ref/> elements: -->
	<bean id="jacksonHttpMessageConverter"
		class="com.winterframework.efamily.base.http.HttpMessageConverter">
		<!-- True only for the blog article - a production system would set this 
					to false to reduce the number of bytes sent across the wire: -->
		<property name="prettyPrint" value="true" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		
		<property name="defaultContentType"
			value="#{T(org.springframework.http.MediaType).APPLICATION_JSON}" />
		
	</bean>
	<!--- StringHttpMessageConverter bean -->
	<bean id = "stringHttpMessageConverter" class = "org.springframework.http.converter.StringHttpMessageConverter"/>

    <!-- <mvc:resources mapping="/image/**" location="/image/" cache-period="31556926"/>   -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Allow Exceptions to be handled in annotated methods if desired. Otherwise 
		fallback to the 'restExceptionResolver' below: -->
	<bean id="annotationMethodHandlerExceptionResolver"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
		<property name= "messageConverters" >
		<list>
                 <!-- 新增的StringMessageConverter bean-->
                 <ref bean= "stringHttpMessageConverter" />
        </list>
        </property>
	</bean>
	<bean id="restExceptionResolver"
	class="com.winterframework.efamily.base.restful.RestExceptionHandler">
		<property name="order" value="100" />
		<property name="messageConverters">
			<list>
				<ref bean="jacksonHttpMessageConverter" />
			</list>
		</property> 
		<property name="errorResolver">
			<bean
				class="com.winterframework.efamily.base.restful.DefaultRestErrorResolver">
				<property name="localeResolver" ref="localeResolver" />
				<property name="defaultMoreInfoUrl" value="mailto:support@mycompany.com" />
			</bean>  
		</property>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
	    <property name="defaultEncoding" value="utf-8" />
        <property name="maxUploadSize" value="104857600"/>
        <property name="maxInMemorySize" value="4096"/>
	</bean>
	<aop:aspectj-autoproxy />
</beans>
 