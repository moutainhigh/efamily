<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.efamily.entity.EjlFamilyUser">
	<resultMap id="EjlFamilyUserResult" type="com.winterframework.efamily.entity.EjlFamilyUser">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ejlFamilyUserColumns">
	    <![CDATA[
	        	id as id,
	        	user_id as userId,
	        	family_id as familyId,
	        	status as status,
	        	type as type,
	        	role_id as roleId,
	        	manage_type as manageType,
	        	remark as remark,
	        	creator_id as creatorId,
	        	create_time as createTime,
	        	updator_id as updatorId,
	        	update_time as updateTime,
	        	position as position,
	        	is_forbit_speak as isForbitSpeak
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.efamily.entity.EjlFamilyUser" 
			useGeneratedKeys="true" keyProperty="id" 
		 flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        ejl_family_user (
	        	user_id ,
	        	family_id ,
	        	status ,
	        	type ,
	        	role_id ,
	        	manage_type ,
	        	remark ,
	        	creator_id ,
	        	create_time ,
	        	position ,
	        	is_forbit_speak   
	        ) VALUES (
	        	#{userId,javaType=long,jdbcType=DECIMAL} ,
	        	#{familyId,javaType=long,jdbcType=DECIMAL} ,
	        	#{status,javaType=long,jdbcType=DECIMAL} ,
	        	#{type,javaType=long,jdbcType=DECIMAL} ,
	        	#{roleId,javaType=long,jdbcType=DECIMAL} ,
	        	#{manageType,javaType=long,jdbcType=DECIMAL} ,
	        	#{remark,javaType=string,jdbcType=VARCHAR} ,
	        	#{creatorId,javaType=long,jdbcType=DECIMAL}  ,
	        	#{createTime,javaType=date,jdbcType=TIMESTAMP},
	        	#{position,javaType=integer,jdbcType=INTEGER} ,
	        	#{isForbitSpeak,javaType=integer,jdbcType=INTEGER} 
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.efamily.entity.EjlFamilyUser">
	        UPDATE ejl_family_user  
		       <set>
				       <if test="@Ognl@isNotEmpty(userId)">
							 USER_ID = #{userId,javaType=long,jdbcType=DECIMAL} ,
						</if>
				       <if test="@Ognl@isNotEmpty(familyId)">
							 FAMILY_ID = #{familyId,javaType=long,jdbcType=DECIMAL} ,
						</if>
				       <if test="@Ognl@isNotEmpty(status)">
							 STATUS = #{status,javaType=long,jdbcType=DECIMAL} ,
						</if>
				       <if test="@Ognl@isNotEmpty(type)">
							 TYPE = #{type,javaType=long,jdbcType=DECIMAL} ,
						</if>
				       <if test="@Ognl@isNotEmpty(roleId)">
							 ROLE_ID = #{roleId,javaType=long,jdbcType=DECIMAL} ,
						</if>
						<if test="@Ognl@isNotEmpty(manageType)">
                           MANAGE_TYPE = #{manageType,javaType=long,jdbcType=DECIMAL} ,
                        </if>
						<if test="@Ognl@isNotEmpty(remark)">
                            remark = #{remark,javaType=string,jdbcType=VARCHAR} ,
                        </if>
                        <if test="@Ognl@isNotEmpty(updatorId)">
                            updator_id = #{updatorId,javaType=long,jdbcType=DECIMAL}, 
                        </if>
                        <if test="@Ognl@isNotEmpty(updateTime)">
                            update_time = #{updateTime,javaType=date,jdbcType=TIMESTAMP} ,
                        </if>
                        <if test="@Ognl@isNotEmpty(position)">
                            position = #{position,javaType=integer,jdbcType=INTEGER} ,
                        </if>
                        <if test="@Ognl@isNotEmpty(isForbitSpeak)">
                            is_forbit_speak = #{isForbitSpeak,javaType=integer,jdbcType=INTEGER} 
                        </if>
                        	        	
	        	
					</set>
	        WHERE 
		        id = #{id} 
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from ejl_family_user where
		        id = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="EjlFamilyUserResult" flushCache="false">
			select <include refid="ejlFamilyUserColumns" />
		    <![CDATA[
			    from ejl_family_user 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="EjlFamilyUserResult" flushCache="false">
			select <include refid="ejlFamilyUserColumns" />
			    from ejl_family_user 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
                </foreach>					
		</select>	

	<sql id="ejlFamilyUserDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				and user_id = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(familyId)">
				and family_id = #{familyId}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				and status = #{status}
			</if>
	       <if test="@Ognl@isNotEmpty(type)">
				and type = #{type}
			</if>
	       <if test="@Ognl@isNotEmpty(roleId)">
				and role_id = #{roleId}
			</if>
	       <if test="@Ognl@isNotEmpty(manageType)">
				and manage_type = #{manageType}
			</if>
	       <if test="@Ognl@isNotEmpty(remark)">
				and remark = #{remark}
			</if>
	       <if test="@Ognl@isNotEmpty(creatorId)">
				and creator_id = #{creatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(createTime)">
				and create_time = #{createTime}
			</if>
	       <if test="@Ognl@isNotEmpty(updatorId)">
				and updator_id = #{updatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(updateTime)">
				and update_time = #{updateTime}
			</if>
            <if test="@Ognl@isNotEmpty(position)">
                and position = #{position} 
            </if>
            <if test="@Ognl@isNotEmpty(isForbitSpeak)">
                and is_forbit_speak = #{isForbitSpeak} 
            </if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="EjlFamilyUserResult"  flushCache="false">
    	select <include refid="ejlFamilyUserColumns" />
	    from ejl_family_user 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from ejl_family_user 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from ejl_family_user 
		<include refid="ejlFamilyUserDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="EjlFamilyUserResult">
    	select <include refid="ejlFamilyUserColumns" />
	    from ejl_family_user 
		<include refid="ejlFamilyUserDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	<select id="getObjByAttribute" resultMap="EjlFamilyUserResult">
    	select <include refid="ejlFamilyUserColumns" />
	    from ejl_family_user 
		<include refid="ejlFamilyUserDynamicWhere"/>
    </select>

		<select id="getByUserId" parameterType="long" resultMap="EjlFamilyUserResult" flushCache="false">
			select <include refid="ejlFamilyUserColumns" />
		    from EJL_FAMILY_USER 
	        where USER_ID = #{userId} 
		</select>	        
		
		<select id="getByFamilyId" parameterType="long" resultMap="EjlFamilyUserResult" flushCache="false">
			select <include refid="ejlFamilyUserColumns" />
		    from EJL_FAMILY_USER 
	        where FAMILY_ID = #{familyId} 
		</select>	
	
	    <select id="getFamilyUserByParm" parameterType="com.winterframework.efamily.entity.EjlFamilyUser" resultMap="EjlFamilyUserResult"  flushCache="false">
	    	select <include refid="ejlFamilyUserColumns" />
		    from EJL_FAMILY_USER 
	        <include refid="ejlFamilyUserDynamicWhere"/>    
        </select>
     
    <select id="getListByFamilyId" resultMap="EjlFamilyUserResult">
    	select <include refid="ejlFamilyUserColumns" />
	    from ejl_family_user 
		where family_id=#{familyId}
    </select>
    <select id="getListByFamilyIdAndType" resultMap="EjlFamilyUserResult">
    	select <include refid="ejlFamilyUserColumns" />
	    from ejl_family_user 
		where family_id=#{familyId}
		  and type=#{type}
    </select>
</mapper>