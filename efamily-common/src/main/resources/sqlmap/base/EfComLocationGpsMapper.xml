<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.efamily.entity.EfLocationGps">
	<resultMap id="EfLocationGpsResult" type="com.winterframework.efamily.entity.EfLocationGps">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="efLocationGpsColumns">
	    <![CDATA[
	        	id as id,
	        	user_id as userId,
	        	location as location,
	        	device_id as deviceId,
	        	time as time,
	        	remark as remark,
	        	creator_id as creatorId,
	        	create_time as createTime,
	        	updator_id as updatorId,
	        	update_time as updateTime,
	        	op_tag as opTag
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.efamily.entity.EfLocationGps" 
			useGeneratedKeys="true" keyProperty="id" 
		 flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        ef_location_gps (
	        	user_id ,
	        	location ,
	        	device_id ,
	        	time ,
	        	remark ,
	        	creator_id ,
	        	create_time ,
	        	updator_id ,
	        	update_time
	        ) VALUES (
	        	#{userId,javaType=long,jdbcType=DECIMAL} ,
	        	#{location,javaType=string,jdbcType=VARCHAR} ,
	        	#{deviceId,javaType=long,jdbcType=DECIMAL} ,
	        	#{time,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{remark,javaType=string,jdbcType=VARCHAR} ,
	        	#{creatorId,javaType=long,jdbcType=DECIMAL} ,
	        	#{createTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{updatorId,javaType=long,jdbcType=DECIMAL} ,
	        	#{updateTime,javaType=date,jdbcType=TIMESTAMP} 
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.efamily.entity.EfLocationGps">
	    <![CDATA[
	        UPDATE ef_location_gps SET
		        user_id = #{userId,javaType=long,jdbcType=DECIMAL} ,
		        location = #{location,javaType=string,jdbcType=VARCHAR} ,
		        device_id = #{deviceId,javaType=long,jdbcType=DECIMAL} ,
		        time = #{time,javaType=date,jdbcType=TIMESTAMP} ,
		        remark = #{remark,javaType=string,jdbcType=VARCHAR} ,
		        creator_id = #{creatorId,javaType=long,jdbcType=DECIMAL} ,
		        create_time = #{createTime,javaType=date,jdbcType=TIMESTAMP} ,
		        updator_id = #{updatorId,javaType=long,jdbcType=DECIMAL} ,
		        update_time = #{updateTime,javaType=date,jdbcType=TIMESTAMP} ,
		        op_tag = #{opTag,javaType=integer,jdbcType=INTEGER} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from ef_location_gps where
		        id = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="EfLocationGpsResult" flushCache="false">
			select <include refid="efLocationGpsColumns" />
		    <![CDATA[
			    from ef_location_gps 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="EfLocationGpsResult" flushCache="false">
			select <include refid="efLocationGpsColumns" />
			    from ef_location_gps 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	

	<sql id="efLocationGpsDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				and user_id = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(location)">
				and location = #{location}
			</if>
	       <if test="@Ognl@isNotEmpty(deviceId)">
				and device_id = #{deviceId}
			</if>
	       <if test="@Ognl@isNotEmpty(time)">
				and time = #{time}
			</if>
	       <if test="@Ognl@isNotEmpty(remark)">
				and remark = #{remark}
			</if>
	       <if test="@Ognl@isNotEmpty(creatorId)">
				and creator_id = #{creatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(createTime)">
				and create_time = #{createTime}
			</if>
	       <if test="@Ognl@isNotEmpty(updatorId)">
				and updator_id = #{updatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(updateTime)">
				and update_time = #{updateTime}
			</if>
	       <if test="@Ognl@isNotEmpty(opTag)">
				and op_tag = #{opTag}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="EfLocationGpsResult"  flushCache="false">
    	select <include refid="efLocationGpsColumns" />
	    from ef_location_gps 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from ef_location_gps 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from ef_location_gps 
		<include refid="efLocationGpsDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="EfLocationGpsResult">
    	select <include refid="efLocationGpsColumns" />
	    from ef_location_gps 
		<include refid="efLocationGpsDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	<select id="getObjByAttribute" resultMap="EfLocationGpsResult">
    	select <include refid="efLocationGpsColumns" />
	    from ef_location_gps 
		<include refid="efLocationGpsDynamicWhere"/>
		order by deviceId,time
    </select>

	<select id="getByOpTag" parameterType="hashmap" resultMap="EfLocationGpsResult" flushCache="false">
		select <include refid="efLocationGpsColumns" />
	    from ef_location_gps 
        where op_tag = #{opTag}
        <if test="@Ognl@isNotEmpty(beginDate)">
        and time <![CDATA[>=]]> #{beginDate}
        </if>
        <if test="@Ognl@isNotEmpty(endDate)">
        and time <![CDATA[<=]]> #{endDate}
        </if>
        <if test="@Ognl@isNotEmpty(userId)">
			and user_id=#{userId}
		</if>
		 <if test="@Ognl@isNotEmpty(deviceId)">
			and device_id=#{deviceId}
		</if>
        order by DEVICE_ID,time
	</select>  
	
	<select id="getMaxMinTimeGps" resultType="hashmap">
    	select min(time) as minTime,max(time) as maxTime
		FROM
			ef_location_gps
		WHERE
			op_tag = 0
		AND time <![CDATA[>]]> date_add(now(), INTERVAL #{days} DAY)
    </select>
    
    <resultMap id="deviceMap" type="hashmap" >
	  <result property="userId" column="user_id" javaType="long" jdbcType="DECIMAL"/>
	  <result property="deviceId" column="device_id" javaType="long" jdbcType="DECIMAL"/>
	</resultMap>
    
    <select id="getDeviceIdListByFlags" resultMap="deviceMap">
    	select distinct user_id,device_id
		FROM
			ef_location_gps
		WHERE
			op_tag = 0
		AND time BETWEEN #{timeFrom} and #{timeTo}
		order by time
    </select>  
    
    <select id="getGpsOff" resultType="string">
    	select id 
    	from ef_location_gps_off
    </select>
</mapper>
