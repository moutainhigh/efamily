<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.efamily.entity.EjlRemind">
	<resultMap id="EjlRemindResult" type="com.winterframework.efamily.entity.EjlRemind">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ejlRemindColumns">
	    <![CDATA[
	        	id as id,
	        	name as name,
	        	user_id as userId,
	        	content as content,
	        	send_time as sendTime,
	        	send_user_id as sendUserId,
	        	send_method as sendMethod,
	        	sent_status as sentStatus,
	        	is_deleted as deleteStatus,
	        	send_period as sendPeriod,
	        	send_time_end as sendTimeEnd,
	        	send_type as sendType,
	        	remind_state as remindState,
	        	receive_time as receiveTime,
	        	duration_time as durationTime,
	        	device_commond as deviceCommond,
	        	remark as remark,
	        	creator_id as creatorId,
	        	create_time as createTime,
	        	updator_id as updatorId,
	        	update_time as updateTime
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.efamily.entity.EjlRemind" 
			useGeneratedKeys="true" keyProperty="id" 
		 flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        ejl_remind (
	        	name ,
	        	user_id ,
	        	content ,
	        	send_time ,
	        	send_user_id ,
	        	send_method ,
	        	sent_status ,
	        	is_deleted ,
	        	send_period ,
	        	send_time_end ,
	        	send_type ,
	        	remind_state ,
	        	receive_time ,
	        	duration_time ,
	        	device_commond ,
	        	remark ,
	        	creator_id ,
	        	create_time  
	        ) VALUES (
	        	#{name,javaType=string,jdbcType=VARCHAR} ,
	        	#{userId,javaType=long,jdbcType=DECIMAL} ,
	        	#{content,javaType=string,jdbcType=VARCHAR} ,
	        	#{sendTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{sendUserId,javaType=long,jdbcType=DECIMAL} ,
	        	#{sendMethod,javaType=long,jdbcType=DECIMAL} ,
	        	#{sentStatus,javaType=long,jdbcType=DECIMAL} ,
	        	#{deleteStatus,javaType=long,jdbcType=DECIMAL} ,
	        	#{sendPeriod,javaType=long,jdbcType=VARCHAR} ,
	        	#{sendTimeEnd,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{sendType,javaType=long,jdbcType=DECIMAL} ,
	        	#{remindState,javaType=long,jdbcType=DECIMAL} ,
	        	#{receiveTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{durationTime,javaType=long,jdbcType=DECIMAL} ,
	        	#{deviceCommond,javaType=long,jdbcType=DECIMAL} ,
	        	#{remark,javaType=string,jdbcType=VARCHAR} ,
	        	#{creatorId,javaType=long,jdbcType=DECIMAL}  ,
	        	#{createTime,javaType=date,jdbcType=TIMESTAMP}  
	        )
	    ]]>	
	
		</insert>
		
		
		
		<update id="update" parameterType="com.winterframework.efamily.entity.EjlRemind">
	        UPDATE EJL_REMIND 
	        <set>
	        	<if test="@Ognl@isNotEmpty(name)">
		        NAME = #{name,javaType=string,jdbcType=VARCHAR} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(userId)">
		        USER_ID = #{userId,javaType=long,jdbcType=DECIMAL} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(content)">
		        CONTENT = #{content,javaType=string,jdbcType=VARCHAR} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(sendTime)">
		        SEND_TIME = #{sendTime,javaType=date,jdbcType=TIMESTAMP} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(sendUserId)">
		        SEND_USER_ID = #{sendUserId,javaType=long,jdbcType=DECIMAL} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(sendMethod)">
		        SEND_METHOD = #{sendMethod,javaType=long,jdbcType=DECIMAL} ,
		        </if>
		         <if test="@Ognl@isNotEmpty(sentStatus)">
		        SENT_STATUS = #{sentStatus,javaType=long,jdbcType=DECIMAL} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(deleteStatus)">
		        IS_DELETED = #{deleteStatus,javaType=long,jdbcType=DECIMAL} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(sendPeriod)">
		        SEND_PERIOD = #{sendPeriod,javaType=long,jdbcType=DECIMAL} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(sendTimeEnd)">
		        SEND_TIME_END = #{sendTimeEnd,javaType=date,jdbcType=TIMESTAMP} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(sendType)">
		        SEND_TYPE = #{sendType,javaType=long,jdbcType=DECIMAL},
		        </if>
		        <if test="@Ognl@isNotEmpty(remindState)">
		        REMIND_STATE = #{remindState,javaType=long,jdbcType=DECIMAL},
		        </if>
		        <if test="@Ognl@isNotEmpty(receiveTime)">
		        RECEIVE_TIME = #{receiveTime,javaType=date,jdbcType=TIMESTAMP} ,
		        </if>
		         <if test="@Ognl@isNotEmpty(durationTime)">
		        DURATION_TIME = #{durationTime,javaType=long,jdbcType=DECIMAL},
		        </if>
		        <if test="@Ognl@isNotEmpty(deviceCommond)">
		        DEVICE_COMMOND = #{deviceCommond,javaType=long,jdbcType=DECIMAL},
		        </if>
		         <if test="@Ognl@isNotEmpty(remark)">
		        remark = #{remark,javaType=string,jdbcType=VARCHAR} ,
		        </if>
		        <if test="@Ognl@isNotEmpty(updatorId)">
		        updator_id = #{updatorId,javaType=long,jdbcType=DECIMAL}  ,
		        </if>
		        <if test="@Ognl@isNotEmpty(updateTime)">
		        update_time = #{updateTime,javaType=date,jdbcType=TIMESTAMP},
		        </if>
		        <if test="@Ognl@isNotEmpty(id)">
		        ID = #{id,javaType=long,jdbcType=DECIMAL}
		        </if>
		    </set>
	        WHERE 
		        ID = #{id} 
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from ejl_remind where
		        id = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="EjlRemindResult" flushCache="false">
			select <include refid="ejlRemindColumns" />
		    <![CDATA[
			    from ejl_remind 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="EjlRemindResult" flushCache="false">
			select <include refid="ejlRemindColumns" />
			    from ejl_remind 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
                </foreach>					
		</select>	

	<sql id="ejlRemindDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(name)">
				and name = #{name}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				and user_id = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(content)">
				and content = #{content}
			</if>
	       <if test="@Ognl@isNotEmpty(sendTime)">
				and send_time = #{sendTime}
			</if>
	       <if test="@Ognl@isNotEmpty(sendUserId)">
				and send_user_id = #{sendUserId}
			</if>
	       <if test="@Ognl@isNotEmpty(sendMethod)">
				and send_method = #{sendMethod}
			</if>
	       <if test="@Ognl@isNotEmpty(sentStatus)">
				and sent_status = #{sentStatus}
			</if>
	       <if test="@Ognl@isNotEmpty(deleteStatus)">
				and is_deleted = #{deleteStatus}
			</if>
	       <if test="@Ognl@isNotEmpty(sendPeriod)">
				and send_period = #{sendPeriod}
			</if>
	       <if test="@Ognl@isNotEmpty(sendTimeEnd)">
				and send_time_end = #{sendTimeEnd}
			</if>
	       <if test="@Ognl@isNotEmpty(sendType)">
				and send_type = #{sendType}
			</if>
	       <if test="@Ognl@isNotEmpty(remindState)">
				and remind_state = #{remindState}
			</if>
	       <if test="@Ognl@isNotEmpty(receiveTime)">
				and receive_time = #{receiveTime}
			</if>
	       <if test="@Ognl@isNotEmpty(durationTime)">
				and duration_time = #{durationTime}
			</if>
	       <if test="@Ognl@isNotEmpty(deviceCommond)">
				and device_commond = #{deviceCommond}
			</if>
	       <if test="@Ognl@isNotEmpty(remark)">
				and remark = #{remark}
			</if>
	       <if test="@Ognl@isNotEmpty(creatorId)">
				and creator_id = #{creatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(createTime)">
				and create_time = #{createTime}
			</if>
	       <if test="@Ognl@isNotEmpty(updatorId)">
				and updator_id = #{updatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(updateTime)">
				and update_time = #{updateTime}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="EjlRemindResult"  flushCache="false">
    	select <include refid="ejlRemindColumns" />
	    from ejl_remind 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from ejl_remind 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from ejl_remind 
		<include refid="ejlRemindDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="EjlRemindResult">
    	select <include refid="ejlRemindColumns" />
	    from ejl_remind 
		<include refid="ejlRemindDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	<select id="getObjByAttribute" resultMap="EjlRemindResult">
    	select <include refid="ejlRemindColumns" />
	    from ejl_remind 
		<include refid="ejlRemindDynamicWhere"/>
    </select>


	
</mapper>
