<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.efamily.entity.EfDeviceSetting">
	<resultMap id="EfDeviceSettingResult" type="com.winterframework.efamily.entity.EfDeviceSetting">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="EfDeviceSettingColumns">
       	id as id,
       	user_id as userId,
       	device_id as deviceId,
       	connect as connect,
       	common as common,
       	frequency as frequency,
       	health as health,
       	remark as remark,
       	creator_id as creatorId,
       	create_time as createTime,
       	updator_id as updatorId,
       	update_time as updateTime
	</sql>
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" parameterType="com.winterframework.efamily.entity.EfDeviceSetting" 
		useGeneratedKeys="true" keyProperty="id" 
	 flushCache="true">
        INSERT INTO
        ef_device_setting (
        	user_id,
        	device_id ,
        	connect ,
        	common ,
        	frequency ,
        	health ,
        	remark ,
        	creator_id ,
        	create_time  
        ) VALUES (
        	#{userId,javaType=long,jdbcType=DECIMAL} ,
        	#{deviceId,javaType=long,jdbcType=DECIMAL} ,
        	#{connect,javaType=string,jdbcType=VARCHAR} ,
        	#{common,javaType=string,jdbcType=VARCHAR} ,
        	#{frequency,javaType=string,jdbcType=VARCHAR} ,
        	#{health,javaType=string,jdbcType=VARCHAR} ,
        	#{remark,javaType=string,jdbcType=VARCHAR} ,
        	#{creatorId,javaType=long,jdbcType=DECIMAL}  ,
        	#{createTime,javaType=date,jdbcType=TIMESTAMP}  
        )
	</insert>
    
	<update id="update" parameterType="com.winterframework.efamily.entity.EfDeviceSetting">
        UPDATE ef_device_setting SET
	        user_id = #{userId,javaType=long,jdbcType=DECIMAL} ,
	        device_id = #{deviceId,javaType=long,jdbcType=DECIMAL} ,
	        connect = #{connect,javaType=string,jdbcType=VARCHAR} ,
	        common = #{common,javaType=string,jdbcType=VARCHAR} ,
	        frequency = #{frequency,javaType=string,jdbcType=VARCHAR} ,
	        health = #{health,javaType=string,jdbcType=VARCHAR} ,
	        remark = #{remark,javaType=string,jdbcType=VARCHAR} ,
	        updator_id = #{updatorId,javaType=long,jdbcType=DECIMAL} ,
	        update_time = #{updateTime,javaType=date,jdbcType=TIMESTAMP} 
        WHERE 
	        id = #{id} 
	</update>
   <delete id="delete" parameterType="java.lang.Long">
        delete from ef_device_setting where
	        id = #{id} 
    </delete>   
    <select id="getById" parameterType="long" resultMap="EfDeviceSettingResult" flushCache="false">
		select <include refid="EfDeviceSettingColumns" />
		    from ef_device_setting 
	        where 
	        id = #{id} 
	</select>	
	<select id="getByIds" parameterType="list"  resultMap="EfDeviceSettingResult" flushCache="false">
		select <include refid="EfDeviceSettingColumns" />
		    from ef_device_setting 
	        where id in
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
               #{item}
               </foreach>					
	</select>	
 
	<select id="getAll" resultMap="EfDeviceSettingResult"  flushCache="false">
    	select <include refid="EfDeviceSettingColumns" />
	    from ef_device_setting 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
    
    <select id="getByUserIdAndDeviceId" resultMap="EfDeviceSettingResult">
    	select <include refid="EfDeviceSettingColumns" />
	    from ef_device_setting 
		where user_id=#{userId} and device_id = #{deviceId}
    </select>
</mapper>
