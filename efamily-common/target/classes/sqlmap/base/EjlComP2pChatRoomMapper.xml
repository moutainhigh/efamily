<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.efamily.entity.EjlP2pChatRoom">
	<resultMap id="EjlP2pChatRoomResult" type="com.winterframework.efamily.entity.EjlP2pChatRoom">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ejlP2pChatRoomColumns">
	    <![CDATA[
	        	id as id,
	        	user_id_litle as userIdLitle,
	        	user_id_big as userIdBig,
	        	remark as remark,
	        	creator_id as creatorId,
	        	create_time as createTime,
	        	updator_id as updatorId,
	        	update_time as updateTime
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.efamily.entity.EjlP2pChatRoom" 
			useGeneratedKeys="true" keyProperty="id" 
		 flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        ejl_p2p_chat_room (
	        	user_id_litle ,
	        	user_id_big ,
	        	remark ,
	        	creator_id ,
	        	create_time  
	        ) VALUES (
	        	#{userIdLitle,javaType=long,jdbcType=DECIMAL} ,
	        	#{userIdBig,javaType=long,jdbcType=DECIMAL} ,
	        	#{remark,javaType=string,jdbcType=VARCHAR} ,
	        	#{creatorId,javaType=long,jdbcType=DECIMAL} ,
	        	#{createTime,javaType=date,jdbcType=TIMESTAMP}  
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.efamily.entity.EjlP2pChatRoom">
	    <![CDATA[
	        UPDATE ejl_p2p_chat_room SET
		        user_id_litle = #{userIdLitle,javaType=long,jdbcType=DECIMAL} ,
		        user_id_big = #{userIdBig,javaType=long,jdbcType=DECIMAL} ,
		        remark = #{remark,javaType=string,jdbcType=VARCHAR} ,
		        updator_id = #{updatorId,javaType=long,jdbcType=DECIMAL}  ,
		        update_time = #{updateTime,javaType=date,jdbcType=TIMESTAMP} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from ejl_p2p_chat_room where
		        id = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="EjlP2pChatRoomResult" flushCache="false">
			select <include refid="ejlP2pChatRoomColumns" />
		    <![CDATA[
			    from ejl_p2p_chat_room 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="EjlP2pChatRoomResult" flushCache="false">
			select <include refid="ejlP2pChatRoomColumns" />
			    from ejl_p2p_chat_room 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
                </foreach>					
		</select>	

	<sql id="ejlP2pChatRoomDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userIdLitle)">
				and user_id_litle = #{userIdLitle}
			</if>
	       <if test="@Ognl@isNotEmpty(userIdBig)">
				and user_id_big = #{userIdBig}
			</if>
	       <if test="@Ognl@isNotEmpty(remark)">
				and remark = #{remark}
			</if>
	       <if test="@Ognl@isNotEmpty(creatorId)">
				and creator_id = #{creatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(createTime)">
				and create_time = #{createTime}
			</if>
	       <if test="@Ognl@isNotEmpty(updatorId)">
				and updator_id = #{updatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(updateTime)">
				and update_time = #{updateTime}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="EjlP2pChatRoomResult"  flushCache="false">
    	select <include refid="ejlP2pChatRoomColumns" />
	    from ejl_p2p_chat_room 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from ejl_p2p_chat_room 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from ejl_p2p_chat_room 
		<include refid="ejlP2pChatRoomDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="EjlP2pChatRoomResult">
    	select <include refid="ejlP2pChatRoomColumns" />
	    from ejl_p2p_chat_room 
		<include refid="ejlP2pChatRoomDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	<select id="getObjByAttribute" resultMap="EjlP2pChatRoomResult">
    	select <include refid="ejlP2pChatRoomColumns" />
	    from ejl_p2p_chat_room 
		<include refid="ejlP2pChatRoomDynamicWhere"/>
    </select>


	
</mapper>
